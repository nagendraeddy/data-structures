3.
Given the head of a singly linked list, return number of nodes present in a linked 

Example 1:
1->2->3->5->8
Output 5

program:
#include <stdio.h>
#include <stdlib.h>
struct Node  
{
    int data;
    struct Node* next;
};         
int countNodes(struct Node* head) 
{
    int count = 0;
    struct Node* current = head;
    while (current != NULL) 
    {
        count++;
        current = current->next;
    }
    return count;
}
int main() 
{
    struct Node* head = (struct Node*)malloc(sizeof(struct Node));
    struct Node* second = (struct Node*)malloc(sizeof(struct Node));
    struct Node* third = (struct Node*)malloc(sizeof(struct Node));
    head->data = 1;
    head->next = second;
    second->data = 2;
    second->next = third;
    third->data = 3;
    third->next = NULL;
    int nodeCount = countNodes(head);
    printf("Number of nodes in the linked list: %d\n", nodeCount);
    free(head);
    free(second);
    free(third);
    return 0;
}

output:
Number of nodes in the linked list: 3
